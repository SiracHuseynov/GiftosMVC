@using Giftos.Core.Models
@using X.PagedList
@using X.PagedList.Mvc.Core

@model IPagedList<Product>

@{
    int counter = 1;
}

<div class="container">
    <div class="row">
        <div class="col-3">
            <a asp-action="Create" class="btn btn-outline-primary">Create Product</a>
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            <table class="table">
                <thead>
                    <tr>
                        <th scope="col">#</th>
                        <th scope="col">Id</th>
                        <th scope="col">Title</th>
                        <th scope="col">Price</th>
                        <th scope="col">Alert</th>
                        <th scope="col">Image</th>
                        <th scope="col">Actions</th>

                    </tr>
                </thead>
                @foreach (var item in Model)
                {
                    <tbody>
                        <tr>
                            <th scope="row">@(counter++)</th>
                            <td>@item.Id</td>
                            <td>@item.Title</td>
                            <td>@item.Price</td>
                            <td>@item.ProductAlert</td>
                            <td><img src="~/uploads/products/@item.ImageUrl" height="100" /></td>
                            <td>
                                <a asp-action="Update" asp-route-id="@item.Id" class="btn btn-warning">Update</a>
                                <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger">Delete</a>
                            </td>
                        </tr>

                    </tbody>
                }
            </table>
        </div>
    </div>
</div>


<div class="container">
    <div class="row">
        <div class="pagination-container">
            @Html.PagedListPager(Model, page => Url.Action("Index", new {pageIndex = page, pageSize = Model.PageSize}));
        </div>
    </div>
</div>